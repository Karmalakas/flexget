#
# Author: Christian Alexander <alexforsale@yahoo.com>
#
secrets: secrets.yml


templates:

# reject secara global
  reject:
    regexp:
      reject:
        - (s|d)ub(s|bed|lado|titulado)?\b
        - \bdual\b
        - \b3d\b
        - \b(fr)(ench)?\b
        - \b(ita)(lian)?\b
        - \b(spa)(nish)?\b
        - \b(ger)(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
        - \bportugese?\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

# setting global untuk transmission-daemon
# perlu disesuaikan dengan konfigurasi transmission di /etc/transmission-daemon/settings.json
  transmission-global:
    _transmission-settings: &transmission-settings
      enabled: yes
      host: localhost
      port: 9091
      username: transmission
      password: transmission
      ratio: 1 # orang baik seed dengan ratio >4 saya bukan orang baik - baik
      include_subs: yes
    retry_failed:
      retry_time: 10 seconds
      retry_time_multiplier: 1
      max_retries: 4

# ambil settings dari transmission-settings juga
  transmission-series:
    transmission:
      <<: *transmission-settings
      path: '/home/{{ secrets.user }}/torrent/Series/{{tvdb_series_name}}'

  transmission-movies:
    transmission:
      <<: *transmission-settings
      path: '/home/{{ secrets.user }}/torrent/Movies'

  transmission-anime:
    transmission:
      <<: *transmission-settings
      path: '/home/{{ secrets.user }}/torrent/anime/{{series_name}}'

# settings untuk pushbullet yang akan mengirim notifikasi

  pushbullet-global:
    _pushbullet-settings: &pushbullet-settings
      apikey: "{{ secrets.pushbullet.apikey }}"

  pushbullet-series:
    pushbullet:
      <<: *pushbullet-settings
      title: "{{ series_name }} {{ series_id }}"
      body: "{{ title }}\n\nSize: {{ content_size }}MB"

  pushbullet-movies:
    pushbullet:
      <<: *pushbullet-settings
      title: "{{ imdb_name }}"
      body: "{{ title }}\n \nSize: {{ content_size }}MB"

# list rss
  rss-tv:
    inputs:
      - rss: { url: 'https://eztv.ag/ezrss.xml' }
      - rss: { url: 'http://www.torlock.com/television/rss.xml' }
      - rss: { url: 'https://rarbg.to/rssdd.php?category=tv' }
      - rss: { url: 'http://extratorrent.cc/rss.xml?cid=8&type=last' }
      - rss: { url: 'https://www.limetorrents.cc/rss/20/' }

# 2 rss dari shanaproject ini hanya contoh, belum terisi oleh daftar anime
  rss-anime:
    inputs:
      - rss: { url: 'http://www.nyaa.eu/?page=rss&cats=1_37&term=horriblesubs&filter=2' }
      - rss: { url: 'http://extratorrent.cc/rss.xml?cid=1&type=last' }
      - rss: { url: 'https://www.limetorrents.cc/rss/1/' }
      - rss: { url: 'http://www.shanaproject.com/feeds/user/38788/' }
      - rss: { url: 'http://www.shanaproject.com/feeds/secure/user/38788/7ZTAXAUBMJ/' }

  rss-movies:
    inputs:
      - rss: { url: 'https://kat.am/movies/?rss=1' }
      - rss: { url: 'https://yts.ag/rss' }
      - rss: { url: 'https://rarbg.to/rssdd.php?category=movies' }
      - rss: { url: 'http://extratorrent.cc/rss.xml?cid=4&type=last' }
      - rss: { url: 'https://www.limetorrents.cc/rss/16/' }

# template untuk TV series
  series:
    thetvdb_lookup: yes
    set:
      label: tv
    configure_series:
      from:
        entry_list: thetvdb-series
      settings:
# untuk list quality bisa dilihat di http://flexget.com/Plugins/quality
        quality: "!720p+"
        identified_by: ep

# template untuk movies
  movies:
    set:
      label: movies
    movie_list: mymovies
    exists_movie:
      path: '{{ secrets.folder.movies }}'
      lookup: imdb
# boleh double asal quality better
      allow_different_qualities: better
    imdb_lookup: yes
    quality: webrip+
    torrent_alive: 10
# filter berdasarkan filename
    regexp:
      from: title
      reject:
        - msd
        - afg
        - line
        - hc
        - korsub

# template untuk anime
  anime:
    set:
      label: anime
    exists_series: '{{ secrets.folder.anime }}'
# penambahan anime baru cukup dengan membuat
# folder baru sesuai dengan nama anime yang akan didownload.
    configure_series:
      from:
        filesystem:
          - '{{ secrets.folder.anime }}'
      settings:
        identified_by: sequence
        special_ids:
          - OVA
    thetvdb_lookup: yes

# disini semua template diatas digunakan
tasks:

##### isi database dengan file yang sudah ada di library

  populate-series-db:
    priority: 1
    metainfo_series: yes
    thetvdb_lookup: yes
    seen: local
    filesystem:
      path: '/{{ secrets.folder.series }}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: '/{{secrets.folder.series}}'
          retrieve: dirs
      settings:
        tracking: no


# task ini berguna untuk memasukkan daftar film dari list watchlist di
# trakt.tv kedalam list flexget (mymovies), yang akan dijadikan acuan 
# untuk download dari rss
  populate-movies-db:
    priority: 2
    trakt_list:
      username: '{{ secrets.trakt.user }}'
      account: '{{ secrets.trakt.account }}'
      list: watchlist
      type: movies
    accept_all: yes
    seen: local
    list_add:
      - movie_list: mymovies

#
  purge-series-list:
    priority: 3
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    entry_list: thetvdb-series
    accept_all: yes
    list_remove:
      - entry_list: thetvdb-series

# import list series dari thetvdb
  fill-series-list:
    priority: 4
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    thetvdb_lookup: yes
    thetvdb_list:
      username: '{{ secrets.thetvdb.user }}'
      account_id: '{{ secrets.thetvdb.id }}'
    accept_all: yes
    list_add:
      - entry_list: thetvdb-series

  download-series-rss:
    priority: 5
    template: [transmission-series, reject, series, rss-tv, pushbullet-series]
    torrent_alive: 10
# filter pertama untuk file yang akan didownload berdasarkan dari size
# pastikan juga filter ini masuk range dari quality yang dicantumkan
# untuk tv show dengan filter quality "!720p+"
    content_size:
      max: 900
      min: 20
# prioritas download pertama
    transmission:
      queue_position: 0

  download-movies-rss:
    priority: 6
    template: [transmission-movies, reject, movies, rss-movies, pushbullet-movies]
    torrent_alive: 10
# prioritas download pertama
    transmission:
      queue_position: 0
    content_size:
      max: 4000
      min: 20    

  download-anime-rss:
    priority: 7
    template: [transmission-anime, anime, rss-anime, pushbullet-series]
    torrent_alive: 10
# untuk anime 300mb+ sudah keterlaluan
    content_size:
      max: 400
      min: 20


# cari dan download episode sebelumnya yang tersedia dipiratebay, extratorrent
# atau limetorrent. Note jika jumlah series yang tercantum di list thetvdb atau
# di target folder series ada banyak, jangan kaget kalau jumlah torrent di transmission
# akan menumpuk banyak.
# tambahan note untuk folder series sudah ada seri dari download manual, pastikan nama folder
# sesuai dengan nama di thetvdb list, untuk mempermudah pencarian.

  download-series-discover:
    priority: 8
    template: [transmission-series, reject, pushbullet-series]
    configure_series:
      from:
        filesystem: 
          path: '{{ secrets.folder.series }}'
      settings:
        identified_by: ep
    thetvdb_lookup: yes
    torrent_alive: 1
    disable:
      - seen
      - seen_info_hash
    discover:
      release_estimations: ignore
      what:
        - next_series_episodes:
            from_start: yes
      from:
        - piratebay:
            category: highres tv
        - extratorrent:
            category: tv
        - limetorrents:
            category: tv
# set semua torrent dari list ini ada diposisi bawah jadi tidak mendahului
# series terbaru, sesuaikan juga dengan 'download-queue-size' di settings.json
# transmission-daemon
    transmission:
      queue_position: 10
    set:
      label: tv
    content_size:
      max: 500
      min: 20

  download-anime-discover:
    priority: 9
    template: [transmission-anime, pushbullet-series]
    configure_series:
      from:
        filesystem: 
          path: '{{ secrets.folder.anime }}'
      settings:
        identified_by: sequence
    thetvdb_lookup: yes
    parsing:
      series: guessit
    torrent_alive: 1
    disable:
      - seen
      - seen_info_hash
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - next_series_episodes:
            from_start: yes
      from:
        - extratorrent:
            category: anime
        - limetorrents:
            category: anime
    transmission:
      queue_position: 10
    set:
      label: anime
    content_size:
      max: 500
      min: 20

# cari file movies dari piratebay, limetorrent dan extratorrent
  download-movies-discover:
    priority: 10
    trakt_lookup: yes
    discover:
      what:
        - movie_list: mymovies
      from:
        - piratebay:
            category: movies
        - limetorrents:
            category: movies
        - extratorrent:
            category: movies
    torrent_alive: 1
    quality: dvdscr+
    template: [transmission-movies, reject, pushbullet-movies]
    transmission:
      path: '{{ secrets.folder.movies }}'
      queue_position: 20
    set:
      label: movies
    content_size:
      max: 4000
      min: 20    

# pindahkan file dari folder download ke exists
  move-series:
    priority: 11
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    thetvdb_lookup: yes
    filesystem:
      path: '/home/{{ secrets.user }}/torrent/Series/'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    move:
      to: "/{{ secrets.folder.series }}/{{tvdb_series_name}}/Season {{tvdb_season}}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - subs
    exec:
      on_exit:
        phase: find /home/{{ secrets.user }}/torrent/Series/* -type d -empty -delete

# pindahkan file dari folder download ke exists
  move-movies:
    priority: 12
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    imdb_lookup: yes
    filesystem:
      path: '/home/{{ secrets.user }}/torrent/Movies/'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    move:
      to: "/{{ secrets.folder.movies}}/{{ imdb_name }}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - subs
    exec:
      on_exit:
        phase: find /home/{{ secrets.user }}/torrent/Movies/* -type d -empty -delete

# pindahkan file dari folder download ke exists
  move-anime:
    priority: 13
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    parsing:
      series: guessit
    filesystem:
      path: '/home/{{ secrets.user }}/torrent/anime/'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    metainfo_series: yes
    move:
      to: "/{{ secrets.folder.anime }}/{{series_name}}/"
    exec:
      allow_background: yes
      on_exit:
        phase: find /home/{{ secrets.user }}/torrent/anime/* -type d -empty -delete


# hapus list transmission yang sudah selesai didownload lebih dari 1 jam
  clean-up-transmission:
    priority: 14
    clean_transmission:
      host: localhost
      port: 9091
      username: transmission
      password: transmission
      finished_for: 1 hours
    disable: details

##### Update list series thetvdb dari folder series , kecuali yang sudah selesai
#
  update-series-list:
    priority: 15
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    thetvdb_lookup: yes
    filesystem:
      path: '/{{secrets.folder.series}}'
      retrieve: dirs
    manipulate:
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
    if:
      - tvdb_status == 'Ended': reject
    list_add:
      - thetvdb_list:
          username: '{{ secrets.thetvdb.user }}'
          account_id: '{{ secrets.thetvdb.id }}'

# Hapus series yang sudah selesai dari list thetvdbClean the series that already ended from trakt series list
#
  clean-series-list:
    priority: 16
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    thetvdb_lookup: yes
    thetvdb_list:
      username: '{{ secrets.thetvdb.user }}'
      account_id: '{{ secrets.thetvdb.id }}'
    if:
      - tvdb_status == 'Ended': accept
    list_remove:
      - thetvdb_list:
          username: '{{ secrets.thetvdb.user }}'
          account_id: '{{ secrets.thetvdb.id }}'


# task untuk torrent yang didownload secara manual, cukup menaruh file .torrent di
# masing - masing path untuk series. movie atau anime, dan akan diproses oleh flexget
# masuk kedalam database.

# series
  download-series-manual:
    priority: 17
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    thetvdb_lookup: yes
    parsing:
      series: guessit
    template:
      - transmission-series
      - pushbullet-series
    filesystem:
      path: '/home/{{ secrets.user }}/torrent/Series/'
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"

# anime
  download-anime-manual:
    priority: 18
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    parsing:
      series: guessit
    metainfo_series: yes
    thetvdb_lookup: yes
    template:
      - transmission-anime
      - pushbullet-series
    filesystem:
      path: '/home/{{ secrets.user }}/torrent/anime/'
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"

# movies
  download-movies-manual:
    priority: 19
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    metainfo_series: yes
    thetvdb_lookup: yes
    imdb_lookup: yes
    template:
      - transmission-movies
      - pushbullet-movies
    filesystem:
      path: '/home/{{ secrets.user }}/torrent/Movies/'
      mask: '*.torrent'
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"

# bisa juga dicantumkan dalam task, seperti di task movies-search

schedules:
  - tasks: 
    - populate-movies-db
    - populate-series-db
    - purge-series-list
    - fill-series-list
    - update-series-list
    interval:
      hours: 3

  - tasks: 
    - move-series
    - move-movies
    - move-anime
    interval: 
      hours: 2

  - tasks: 
    - clean-up-transmission
    interval: 
      days: 1


  - tasks: 
    - download-series-manual
    - download-movies-manual
    - download-anime-manual
    interval:
      minutes: 30

  - tasks: 
    - download-series-discover
    - download-movies-discover
    - download-anime-discover
    interval:
      minutes: 15

  - tasks: 
    - download-series-rss
    - download-movies-rss
    - download-anime-rss
    interval:
      minutes: 10

  - tasks: 
    - update-series-list
    - clean-series-list
    interval:
      hours: 3

